#include <stdio.h>

// Binary Search function

int binarySearch(int arr[], int left, int right, int target) {

    while (left <= right) {

        int mid = left + (right - left) / 2;

        // Check if the target is present at the middle index

        if (arr[mid] == target)

            return mid;

        // If the target is greater, ignore the left half

        if (arr[mid] < target)

            left = mid + 1;

        // If the target is smaller, ignore the right half

        else

            right = mid - 1;

    }

    // If the target is not present in the array

    return -1;

}

// Test the algorithm

int main() {

    int arr[] = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20 };

    int n = sizeof(arr) / sizeof(arr[0]);

    int target = 12;

    int result = binarySearch(arr, 0, n - 1, target);

    if (result == -1)

        printf("Element %d is not present in the array.\n", target);

    else

        printf("Element %d is present at index %d.\n", target, result);

    target = 9;

    result = binarySearch(arr, 0, n - 1, target);

    if (result == -1)

        printf("Element %d is not present in the array.\n", target);

    else

        printf("Element %d is present at index %d.\n", target, result);

    return 0;

}

