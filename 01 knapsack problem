#include <stdio.h>

#include <stdlib.h>

int max(int a, int b) {

    return a > b ? a : b;

}

int knapsack(int W, int wt[], int val[], int n) {

    int i, j;

    int table[n+1][W+1];

    for (i = 0; i <= n; i++) {

        for (j = 0; j <= W; j++) {

            if (i == 0 || j == 0) {

                table[i][j] = 0;

            } else if (wt[i-1] <= j) {

                table[i][j] = max(val[i-1] + table[i-1][j-wt[i-1]], table[i-1][j]);

            } else {

                table[i][j] = table[i-1][j];

            }

        }

    }

    return table[n][W];

}

int main() {

    int val[] = {60, 100, 120};

    int wt[] = {10, 20, 30};

    int W = 50;

    int n = sizeof(val) / sizeof(val[0]);

    int max_val = knapsack(W, wt, val, n);

    printf("Maximum value: %d", max_val);

    return 0;

}

