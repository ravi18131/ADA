#include <stdio.h>

#include <stdlib.h>

#include <limits.h>

#define INF INT_MAX

#define MAX_VERTICES 1000

int n;

int graph[MAX_VERTICES][MAX_VERTICES];

int dist[MAX_VERTICES][MAX_VERTICES];

void floyd_warshall() {

    for (int i = 0; i < n; i++) {

        for (int j = 0; j < n; j++) {

            dist[i][j] = graph[i][j];

        }

    }

    for (int k = 0; k < n; k++) {

        for (int i = 0; i < n; i++) {

            for (int j = 0; j < n; j++) {

                if (dist[i][k] != INF && dist[k][j] != INF) {

                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);

                }

            }

        }

    }

}

int main() {

    scanf("%d", &n);

    for (int i = 0; i < n; i++) {

        for (int j = 0; j < n; j++) {

            scanf("%d", &graph[i][j]);

            if (graph[i][j] == -1) {

                graph[i][j] = INF;

            }

        }

    }

    floyd_warshall();

    printf("All Pair Shortest Paths:\n");

    for (int i = 0; i < n; i++) {

        for (int j = 0; j < n; j++) {

            if (dist[i][j] == INF) {

                printf("INF ");

            } else {

                printf("%d ", dist[i][j]);

            }

        }

        printf("\n");

    }

    return 0;

}

